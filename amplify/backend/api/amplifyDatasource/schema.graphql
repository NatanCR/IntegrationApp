type Wallet @model
@auth(rules: [{ allow: public}]) {
  id: ID!
  value: Float
}

type AllEvents @model
@auth(rules: [{ allow: public}]) {
  id: ID!
  currentEvent: Event!
  previousEvents: [Event]!
}

type Event @model
@auth(rules: [{ allow: public}]) {
  id: ID!
  eventName: String!
  eventDate: String!
  eventMember: [Member]!
  quiz: [Quiz]!
  finance: Finance
  activeEvent: Boolean!
}

type Member @model
@auth(rules: [{ allow: public}]) {
  id: ID!
  name: String!
}

enum AnswerType {
  MULTIPLE
  UNIQUE
}

enum QuizCategory {
  FINANCE
  ACTIVITIES
}

type Quiz @model
@auth(rules: [{ allow: public}]) {
  id: ID!
  title: String!
  category: QuizCategory!
  answerType: AnswerType!
  answerOptions: [QuizAnswer]!
}

type QuizAnswer @model
@auth(rules: [{ allow: public}]) {
  id: ID!
  title: String!
  votes: Int
}

type Finance @model
@auth(rules: [{ allow: public}]) {
  id: ID!
  title: String!
  deadline: String!
  totalValue: Float!
  valueMembers: Int
  collaborators: [Member]!
}

enum Status {
  ON
  OFF
}

type Task @model
@auth(rules: [{ allow: public}]) {
  id: ID!
  title: String!
  deadline: String!
  collaborators: [Member]!
  status: Status!
  icon: String
}

type FinanceValidation @model
@auth(rules: [{ allow: public}]) {
  id: ID!
  answer: [FinanceAnswer]!
}

type FinanceAnswer @model
@auth(rules: [{ allow: public}]) {
  id: ID!
  title: String!
  collaborators: [Member]!
}
